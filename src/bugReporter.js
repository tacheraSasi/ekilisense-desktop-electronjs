const { dialog } = require('electron');
const os = require('os');
const { sender } = require('./emailSender');

class BugReporter {
  constructor(apiKey) {
    if (!apiKey) throw new Error('Missing API key for bug reporting');
    this.apiKey = apiKey;
    this.defaultRecipient = 'support@ekilie.com';
  }

  async sendBugReport(mainWindow) {
    try {
      const { response } = await dialog.showMessageBox(mainWindow, {
        type: 'question',
        buttons: ['Send Report', 'Cancel'],
        title: 'Submit System Report',
        message: 'Send anonymous system report to ekiliSense support?',
        detail: 'Technical details about your system will be included to help diagnose potential issues.'
      });

      if (response !== 0) return;

      const systemInfo = this.getSystemInfo();
      const emailContent = this.emailTemplate(systemInfo);

      await sender(
        this.defaultRecipient,
        'ðŸš¨ System Report - ekiliSense Desktop',
        emailContent,
        'Content-Type: text/html; charset=UTF-8\r\nFrom: ekiliSense Desktop <noreply@ekilie.com>',
        this.apiKey
      );

      dialog.showMessageBox({
        type: 'info',
        title: 'Report Submitted',
        message: 'Thank you for your contribution!',
        detail: 'Your system report has been successfully submitted.',
        buttons: ['OK']
      });

    } catch (error) {
      dialog.showMessageBox({
        type: 'error',
        title: 'Submission Failed',
        message: 'Could not send system report',
        detail: error.message,
        buttons: ['OK']
      });
    }
  }

  getSystemInfo() {
    return {
      platform: `${os.platform()} ${os.arch()}`,
      osVersion: os.version(),
      electronVersion: process.versions.electron,
      chromeVersion: process.versions.chrome,
      memory: `${(os.totalmem() / 1024 ** 3).toFixed(1)}GB`,
      cpuCores: os.cpus().length,
      uptime: `${Math.floor(os.uptime() / 60)} minutes`,
      date: new Date().toLocaleString()
    };
  }

  emailTemplate(systemInfo) {
    return `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>System Report</title>
</head>
<body style="margin: 0; padding: 0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background-color: #f5f7fb;">
    <div style="max-width: 600px; margin: 20px auto; background: white; border-radius: 12px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
        <header style="background: #2563eb; padding: 24px; border-radius: 12px 12px 0 0; text-align: center;">
            <img src="https://www.ekilie.com/assets/img/favicon.jpeg" alt="ekiliSense Logo" style="height: 40px;">
            <h1 style="color: white; margin: 16px 0 0; font-size: 24px;">System Health Report</h1>
        </header>

        <div style="padding: 32px;">
            <div style="background: #f8fafc; padding: 24px; border-radius: 8px; margin-bottom: 24px;">
                <h2 style="color: #1e293b; margin-top: 0; font-size: 20px;">ðŸ“Š System Overview</h2>
                <div style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px;">
                    ${Object.entries(systemInfo).map(([key, value]) => `
                        <div style="padding: 12px; background: white; border-radius: 6px; box-shadow: 0 1px 3px rgba(0,0,0,0.05);">
                            <div style="color: #64748b; font-size: 12px; margin-bottom: 4px;">${this.formatKey(key)}</div>
                            <div style="color: #1e293b; font-weight: 500;">${value}</div>
                        </div>
                    `).join('')}
                </div>
            </div>

            <div style="border-top: 1px solid #e2e8f0; padding-top: 24px; text-align: center;">
                <p style="color: #64748b; margin: 0; font-size: 14px;">
                    This report was automatically generated by the ekiliSense Desktop client
                    <br>
                    <span style="color: #94a3b8;">${systemInfo.date}</span>
                </p>
                <div style="margin-top: 24px;">
                    <a href="https://ekilie.com" style="color: #2563eb; text-decoration: none; font-size: 14px;">
                        Visit our website â†’
                    </a>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
    `;
  }

  formatKey(key) {
    return key
      .replace(/([A-Z])/g, ' $1')
      .replace(/^./, str => str.toUpperCase())
      .replace(/Version/g, ' Version');
  }
}

module.exports = BugReporter;